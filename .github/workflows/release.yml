name: release

on:
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: cross-compile
        run: |
          sudo apt-get update
          sudo apt-get install -y musl-tools
          sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu

          sudo apt-get install mingw-w64

      - uses: actions/setup-go@v4
        with:
          go-version: 1.20.x
      
      - uses: goreleaser/goreleaser-action@v4
        with: 
          args: "release --clean --snapshot --config .goreleaser.yaml"
          version: latest
          workdir: v2/
        env: 
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

  build-macos:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install osxcross
        run: |
          sudo git clone https://github.com/tpoechtrager/osxcross.git /usr/local/osxcross
          cd /usr/local/osxcross
          UNATTENDED=yes OSX_VERSION_MIN=10.6 ./build.sh
      - name: Add o64-clang to PATH
        run: echo 'export PATH=/usr/local/osxcross/target/bin:$PATH' >> $GITHUB_ENV
        
      - name: Set CC and CXX for o64-clang
        run: |
          export CC=o64-clang
          export CXX=o64-clang++
      

      - uses: actions/setup-go@v4
        with:
          go-version: 1.20.x
      
      - uses: goreleaser/goreleaser-action@v4
        with: 
          args: "release --clean --snapshot --config .goreleaser.mac.yaml"
          version: latest
          workdir: v2/
        env: 
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      
      # # - run: git fetch --prune --unshallow
      # # - run: git fetch --prune

      
      # - uses: goreleaser/goreleaser-action@v4
      #   with: 
      #     args: "release --clean"
      #     version: latest
      #     workdir: v2/
      #   env: 
      #     GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"